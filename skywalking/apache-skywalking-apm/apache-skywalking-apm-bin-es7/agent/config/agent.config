# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO：命名空间
agent.namespace=${SW_AGENT_NAMESPACE:BUK_NAMESPACE}

# TODO：服务名
agent.service_name=${SW_AGENT_NAME:DEFAULT_SERVICE_NAME}

# The number of sampled traces per 3 seconds
# Negative or zero means off, by default
# agent.sample_n_per_3_secs=${SW_AGENT_SAMPLE:-1}

# TODO：认证方式
agent.authentication = ${SW_AGENT_AUTHENTICATION:BUK_AUTHENTICATION}

# The max amount of spans in a single segment.
# Through this config item, SkyWalking keep your application memory cost estimated.
# agent.span_limit_per_segment=${SW_AGENT_SPAN_LIMIT:150}

# If the operation name of the first span is included in this set, this segment should be ignored. Multiple values should be separated by `,`.
# agent.ignore_suffix=${SW_AGENT_IGNORE_SUFFIX:.jpg,.jpeg,.js,.css,.png,.bmp,.gif,.ico,.mp3,.mp4,.html,.svg}

# If true, SkyWalking agent will save all instrumented classes files in `/debugging` folder.
# SkyWalking team may ask for these files in order to resolve compatible problem.
# agent.is_open_debugging_class = ${SW_AGENT_OPEN_DEBUG:true}

# If true, SkyWalking agent will cache all instrumented classes files to memory or disk files (decided by class cache mode),
# allow other javaagent to enhance those classes that enhanced by SkyWalking agent.
agent.is_cache_enhanced_class = ${SW_AGENT_CACHE_CLASS:true}

# The instrumented classes cache mode: MEMORY or FILE
# MEMORY: cache class bytes to memory, if instrumented classes is too many or too large, it may take up more memory
# FILE: cache class bytes in `/class-cache` folder, automatically clean up cached class files when the application exits
agent.class_cache_mode = ${SW_AGENT_CLASS_CACHE_MODE:MEMORY}

# The operationName max length
# Notice, in the current practice, we don't recommend the length over 190.
# agent.operation_name_threshold=${SW_AGENT_OPERATION_NAME_THRESHOLD:150}

# The agent use gRPC plain text in default.
# If true, SkyWalking agent uses TLS even no CA file detected.
# agent.force_tls=${SW_AGENT_FORCE_TLS:false}

# If true, skywalking agent will enable profile when user create a new profile task. Otherwise disable profile.
# profile.active=${SW_AGENT_PROFILE_ACTIVE:true}

# Parallel monitor segment count
# profile.max_parallel=${SW_AGENT_PROFILE_MAX_PARALLEL:5}

# Max monitor segment time(minutes), if current segment monitor time out of limit, then stop it.
# profile.duration=${SW_AGENT_PROFILE_DURATION:10}

# Max dump thread stack depth
# profile.dump_max_stack_depth=${SW_AGENT_PROFILE_DUMP_MAX_STACK_DEPTH:500}

# Snapshot transport to backend buffer size
# profile.snapshot_transport_buffer_size=${SW_AGENT_PROFILE_SNAPSHOT_TRANSPORT_BUFFER_SIZE:50}

# TODO：后端服务地址
collector.backend_service=${SW_AGENT_COLLECTOR_BACKEND_SERVICES:127.0.0.1:11800}

# TODO：日志文件名
logging.file_name=${SW_LOGGING_FILE_NAME:skywalking-api.log}

# TODO：日志等级
logging.level=${SW_LOGGING_LEVEL:INFO}

# TODO：日志目录
# logging.dir=${SW_LOGGING_DIR:""}

# TODO：日志文件大小, default: 300 * 1024 * 1024 = 314572800
logging.max_file_size=${SW_LOGGING_MAX_FILE_SIZE:314572800}

# TODO：最大历史记录日志文件。如果日志文件超过此数目，那么最早的文件将被删除。默认情况下，负数或零表示关闭
logging.max_history_files=${SW_LOGGING_MAX_HISTORY_FILES:3}

# Listed exceptions would not be treated as an error. Because in some codes, the exception is being used as a way of controlling business flow.
# Besides, the annotation named IgnoredException in the trace toolkit is another way to configure ignored exceptions.
# statuscheck.ignored_exceptions=${SW_STATUSCHECK_IGNORED_EXCEPTIONS:}

# The max recursive depth when checking the exception traced by the agent. Typically, we don't recommend setting this more than 10, which could cause a performance issue. Negative value and 0 would be ignored, which means all exceptions would make the span tagged in error status.
statuscheck.max_recursive_depth=${SW_STATUSCHECK_MAX_RECURSIVE_DEPTH:10}

# Mount the specific folders of the plugins. Plugins in mounted folders would work.
plugin.mount=${SW_MOUNT_FOLDERS:plugins,activations}

# Exclude activated plugins
# plugin.exclude_plugins=${SW_EXCLUDE_PLUGINS:}

# mysql plugin configuration
# plugin.mysql.trace_sql_parameters=${SW_MYSQL_TRACE_SQL_PARAMETERS:false}

# Kafka producer configuration
# plugin.kafka.bootstrap_servers=${SW_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Match spring bean with regex expression for classname
# plugin.springannotation.classname_match_regex=${SW_SPRINGANNOTATION_CLASSNAME_MATCH_REGEX:}

#################################################
##################### extra #####################
#################################################

# TODO：在记录异常信息的时候，探针需要记录的深度，默认5
# agent.cause_exception_depth=10

# TODO：如果该变量true，即使后端服务不可用，也要保持跟踪，默认false
agent.keep_tracing=true

# 对线程化类（java.lang.Runnable 和 java.util.concurrent.Callable）及其子类
# （包括名称与任何一个THREADING_CLASS_PREFIXES（由分隔,）匹配的匿名内部类）进行插补，确保仅将窄前缀指定为您希望插补的前缀，（java.并且javax.将被忽略）由于安全问题）
# plugin.jdkthreading.threading_class_prefixes=''

# TODO：如果为true，endpoint的名称为方法的全限定名，而不是请求的URL。默认为false
plugin.springmvc.use_qualified_name_as_endpoint_name=false
# TODO：如果为true，则操作的名称为方法的全限定名，而不是给定的操作名称。默认为false
plugin.toolit.use_qualified_name_as_operation_name=false

# TODO：控制Tomcat插件是否应该收集请求的参数
plugin.tomcat.collect_http_params=true
# TODO：控制SpringMVC插件是否应该收集请求的参数, 当您的Spring应用程序基于Tomcat时，只需要设置 plugin.tomcat.collect_http_params 或 plugin.springmvc.collect_http_params 之一
plugin.springmvc.collect_http_params=true
# TODO：当启用 collect_http_params 时，要保留多少字符并将其发送到OAP后端，请使用负值来保留和发送完整的参数
plugin.http.http_params_length_threshold=-1
# 设置标题名称，该名称应由插件收集。标头名称必须遵循 javax.servlet.http 定义，多个名称应以逗号分隔
# plugin.http.include_http_headers=''
# 当启用 include_http_headers 时，该阈值控制所有标头值的长度的限制。使用负值保留并发送完整的标头
# plugin.http.http_headers_length_threshold=2048

# TODO：控制Feign插件是否应收集请求的http正文
plugin.feign.collect_request_body=true
# 当启用 collect_request_body 时，该阈值控制所有标头值的长度的限制。使用负值保留并发送完整的body
# plugin.feign.filter_length_limit=1024
# 当启用 collect_request_body 时，content-type 以 supported_content_types_prefix 开头时，收集请求的主体，多个类型应以逗号分隔
# plugin.feign.supported_content_types_prefix='application/json,text'

# TODO：Apache Dubbo，在RPC调用 Object#toString 中收集 provider 的 arguments
plugin.dubbo.collect_provider_arguments=true
# 当启用 collect_provider_arguments 时，该阈值控制所有参数值的长度的限制
# plugin.dubbo.consumer_provider_length_threshold=256

# TODO：Apache Dubbo，在RPC调用 Object#toString 中收集 consumer 的 arguments
plugin.dubbo.collect_consumer_arguments=true
# 当启用 collect_consumer_arguments 时，该阈值控制所有参数值的长度的限制
# plugin.dubbo.consumer_arguments_length_threshold=256

# TODO：如果为true，记录所有访问MongoDB的参数信息。否则为false，表示仅记录操作名，不记录参数信息
plugin.mongodb.trace_param=true
# 如果设置为正数，WriteRequest.params 将被截短到这个长度，否则将被完全保存
# plugin.mongodb.filter_length_limit=256

# TODO：如果为true，记录所有访问ElasticSearch的DSL信息。默认为false
plugin.elasticsearch.trace_dsl=true

# TODO：如果设置为true，则SQL查询（典型的是java.sql.PreparedStatement）的参数也会被采集
plugin.jdbc.trace_sql_parameters=true
# 如果设置为正整数，则收集的SQL参数db.sql.parameters会被截断到这个长度，否则会被完整保存
# plugin.jdbc.sql_parameters_max_length=512
# 如果设置为正数，db.statement将被截断为该长度，否则将被完全保存
# plugin.jdbc.sql_body_max_length=2048

# TODO：如果为true，则追踪Solr查询请求中的所有查询参数（包括deleteByIds和deleteByQuery）默认为false
plugin.solrj.trace_statement=true
# TODO：如果为true，则追踪Solr查询中所有操作参数，默认为false
plugin.solrj.trace_ops_params=true

# TODO：如果为true，则追踪Light4J程序链的所有中间件/业务处理程序
plugin.light4j.trace_handler_chain=true

# Kafka